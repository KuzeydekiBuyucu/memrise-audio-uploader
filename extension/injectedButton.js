var InjectedBtn = function () {    this.$element = undefined;    this.isReady = undefined;};InjectedBtn.prototype.createBtn = function () {    this.$element =        $('<button>')            .addClass('btn')            .addClass('btn-small')            .click(this.onClick.bind(this));    this.setReady();    return this.$element;};InjectedBtn.prototype.setReady = function(){    this.$element.text('Auto upload');    this.isReady = true;};InjectedBtn.prototype.setUploading = function(){    this.$element.text('Uploading...');    this.isReady = false;};InjectedBtn.prototype.onClick = function () {    if (!this.isReady)        return;    this.setUploading();    uploadManager.startAutoUpload(function () {        this.setReady();    }.bind(this));    return false;};var injectedBtn = new InjectedBtn();var observer = new MutationObserver(function (mutations, observer) {    for (var i = 0; i < mutations[0].addedNodes.length; i++) {        if (mutations[0].addedNodes[i].nodeType === 1) {            var $audioLabel = $(mutations[0].addedNodes[i]).find("th.column.audio > span.txt");            if ($audioLabel.length)                injectedBtn.createBtn().insertBefore($audioLabel.next());        }    }});observer.observe(    document.body,    { childList: true, subtree: true, attributes: false, characterData: false });